# master only

name: Integrate

on:
  push:
    branches: [master]

env:
  SLS_IGNORE_WARNING: '*'
  FORCE_COLOR: 1

jobs:
  linuxNode18:
    name: '[Linux] Node.js 18: Unit tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve dependencies from cache
        id: cacheNpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v18-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: npm-v18-${{ runner.os }}-${{ github.ref }}-

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        if: steps.cacheNpm.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Unit tests
        run: npm test

      - name: Get last validated commit hash
        id: get_commit_hash
        run: echo "LAST_VALIDATED_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Create last validated commit hash file
        run: echo $LAST_VALIDATED_COMMIT_HASH > last-validated-commit-hash.txt

      - name: Upload last validated commit hash
        uses: actions/upload-artifact@v4
        with:
          name: last-validated-commit-hash
          path: last-validated-commit-hash

  tagIfNewVersion:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    needs: [linuxNode18]
    timeout-minutes: 30 # Default is 360
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Ensure to have complete history of commits pushed with given push operation
          # It's loose and imperfect assumption that no more than 30 commits will be pushed at once
          fetch-depth: 30
          # Tag needs to be pushed with real user token, otherwise pushed tag won't trigger the actions workflow
          # Hence we're passing 'serverless-ci' user authentication token
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve last validated commit hash (for `git diff` purposes)
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: last-validated-commit-hash
          path: /home/runner
      - name: Tag if new version
        run: |
          LAST_VALIDATED_COMMIT_HASH=`cat /home/runner/last-validated-commit-hash` || :
          if [ -n "$LAST_VALIDATED_COMMIT_HASH" ];
          then
            NEW_VERSION=`git diff -U0 $LAST_VALIDATED_COMMIT_HASH package.json | grep '"version": "' | tail -n 1 | grep -oE "[0-9]+\.[0-9]+\.[0-9]+"` || :
            if [ -n "$NEW_VERSION" ];
            then
              git tag v$NEW_VERSION
              git push --tags
            fi
          fi
